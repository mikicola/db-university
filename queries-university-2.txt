GROUP BY
1. Contare quanti iscritti ci sono stati ogni anno

    SELECT YEAR(enrolment_date),  COUNT(*)
    FROM `students`
    GROUP BY YEAR(enrolment_date)


2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

// contato per ogni ufficio gli insegnanti, raggruppati per ufficio

    SELECT COUNT(*), office_address
    FROM `teachers`
    GROUP BY office_address


3. Calcolare la media dei voti di ogni appello d'esame

// appello = exams
// voto = exam_student.vote

    SELECT exams.date AS data_esame, AVG(exam_student.vote) AS media_voti
    FROM `exam_student`
    INNER JOIN exams ON exam_student.exam_id = exams.id
    GROUP BY exam_student.exam_id

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

// corso di laurea = degrees.name

    SELECT COUNT(name), degrees.name
    FROM `degrees`
    GROUP BY department_id

_________________________________________________________________________________

JOIN
1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

// corso di laurea = degrees.name
// economia degree.id ( 53 )

    SELECT students.name, students.surname, students.degree_id, degrees.name
    FROM `students` 
    INNER JOIN degrees 
    ON students.degree_id = degrees.id
    WHERE degrees.id = '53'
    ORDER BY students.surname ASC


2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze

// corso di laurea = degrees.name
// Dipartimento di Neuroscienze = departments.id ( 7 )

    SELECT departments.id, departments.name, degrees.id, degrees.name
    FROM `departments`
    INNER JOIN degrees
    ON departments.id = degrees.department_id
    WHERE departments.id = '7'
    //oppure where =
    //WHERE departments.name = 'Dipartimento di Neuroscienze'



3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

// insegnante = teachers.id ( 44 )

    SELECT teachers.id, teachers.name, teachers.surname, courses.name AS corso
    FROM `courses`
    INNER JOIN course_teacher
    ON courses.id = course_teacher.course_id
    INNER JOIN teachers
    ON course_teacher.teacher_id = teachers.id
    WHERE teachers.id = '44'

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

// dipartimento = degrees.department_id

    SELECT students.id, students.name, students.surname, degrees.name AS corso_di_laurea, departments.name AS dipartimento
    FROM `students`
    INNER JOIN degrees
    ON students.degree_id = degrees.id 
    INNER JOIN departments
    ON degrees.department_id = departments.id
    ORDER BY students.surname, students.name ASC

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

// corso di laurea = degrees.name
// corsi = courses.name

    SELECT degrees.name AS corso_di_laurea, courses.name AS corsi, teachers.name AS nome_insegnante, teachers.surname AS cognome_insegnante
    FROM `degrees`
    INNER JOIN courses
    ON courses.degree_id = degrees.id
    INNER JOIN course_teacher
    ON course_teacher.course_id = courses.id
    INNER JOIN teachers
    ON teachers.id = course_teacher.teacher_id
    ORDER BY degrees.name

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (70)

    SELECT teachers.name AS nome_insegnante, teachers.surname AS cognome_insegnante, departments.name AS dipartimento
    FROM `teachers`
    INNER JOIN course_teacher
    ON course_teacher.teacher_id = teachers.id
    INNER JOIN courses
    ON courses.id = course_teacher.course_id
    INNER JOIN degrees
    ON degrees.id = courses.degree_id
    INNER JOIN departments
    on departments.id = degrees.department_id
    WHERE departments.name = 'Dipartimento di Matematica'


7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami
